html {
	box-sizing: border-box;
}

*,
*::before,
*::after {
	box-sizing: inherit;
}

html,
body {
	width: 100%;
	height: 100%;
	margin: 0;
	padding: 0;
  /* Removes scroll bar, prevents page scrolling TODO: ensure compatible with other screen sizes */
  overflow: hidden;
}

body {
  /* Background (Geometry 2) from Subtle Patterns */
  background: url(../../img/geometry2.png);
  /* For CodePen */
  /* background: url("https://image.ibb.co/i3hjVy/geometry2.png"); */
	font-family: 'Coda', sans-serif;
	font-size: 16px;
}

.container {
	display: flex;
  flex-direction: column;
  /* Vertically aligns content (under default conditions, flex-direction is row and this would control horizontal alignment [still controls main axis alignment, but main axis is changed]) */
	justify-content: center;
  /* Horizontally aligns content (under default conditions would control vertical alignment [still controls cross axis alignment, but cross axis is changed]) */
	align-items: center;
}

h2 {
  /* Reduce h2 top margin, remove default bottom margin (browser default is 0.83em) */
  margin: 0.3em 0 0 0;
}

.left-span {
  float: left;
}

.right-span {
  float: right;
}

/* DECK OF CARDS */

.card-deck {
	background: #a6a2a2;
	padding: 0.6rem;
	border-radius: 4px;
	box-shadow: 8px 9px 26px 0 rgba(46, 61, 73, 0.5);
	display: flex;
	flex-wrap: wrap;
  /* Horizontal alignment (flex-direction: row is default with display: flex). Distributes items evenly but with twice as much space on the sides as between inner items */
	justify-content: space-evenly;
  /* Vertical alignment */
	align-items: center;
  /* Top, right/left, bottom */
	margin: 0 0 3em;
}

.card-deck .card {
	background: #d6d6d6;
	font-size: 0;
	color: #fff;
	border-radius: 4px;
  box-shadow: 5px 2px 20px 0 rgba(46, 61, 73, 0.5);
	cursor: pointer;
  /* Control placement of Font Awesome icons on card */
	display: flex;
  /* Horizontal alignment (flex-direction: row is default with display: flex) */
	justify-content: center;
  /* Vertical alignment */
	align-items: center;
}

.card-deck .card.open {
	background: #1db9f2;
	cursor: default;
	animation-name: flipInY;
	animation-duration: 0.5s;
}

.card-deck .card.show {
  /* Makes Font Awesome icon appear on card */
	font-size: 33px;
}

.show {
  /* Without these two (with !important), modal doesn't appear when game is won */
	visibility: visible !important;
	opacity: 100 !important;
}

/* Styles matching cards. Not sure why, but .card-deck needed */
.card-deck .card.matching {
  /* Changes cursor back to normal to indicate nothing will happen if you click a card */
	cursor: default;
	background: #1db9f2;
  /* Makes Font Awesome icons appear on card */
	font-size: 33px;
	animation-name: rubberBand;
  backface-visibility: visible;
	-webkit-backface-visibility: visible;
	animation-duration: 0.5s;
}

/* Styles cards that don't match. Not sure why, but .card-deck needed */
.card-deck .card.not-matching {
	animation-name: pulse;
  animation-duration: 0.5s;
	background: #cf205d;
}

/* Affects whole deck. Class "disabled" is add Not sure why, but .card-deck needed */
.card-deck .card.disabled {
	pointer-events: none;
	opacity: 0.9;
}

/* SCORE PANEL */

.score-panel {
	text-align: left;
  margin: 0 0 0.4em;
}

.stars {
	padding: 0;
  /* Displays next to text instead of (horizontally) on line above it. Even though .stars ul is inside span class, ul is a block element */
	display: inline-block;
	margin: 0 5px 0 0;
}

.stars li {
	list-style: none;
  /* Displays horizontally instead of vertically */
	display: inline-block;
}

/* Game restart button */
.restart {
	cursor: pointer;
  color: #2eb82e;
}

.timer {
	margin: 0 0.5em;
}

/* CONGRATULATIONS MODAL */

.modal {
	position: fixed;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	background: rgba(0, 0, 0, 0.62);
	transition: opacity 500ms;
  /* Hides modal */
	visibility: hidden;
  /* Solves a bug that causes stars to stay on screen after closing modal */
	opacity: 0;
}

.modal-content {
	margin: 70px auto;
	padding: 20px;
	background: #fff;
  text-align: center;
	border-radius: 5px;
	width: 85%;
	position: relative;
  /* Without this, stars from modal linger on the screen slightly longer than the rest of modal */
	transition: all 2s ease-in-out;
}

.modal-content h2 {
	margin-top: 0;
	color: #333;
}

/* TODO: "x" button overlaps with "Congratulations" on some phones; fix */
/* Affects "x" button on modal */
.close {
	position: absolute;
	top: 20px;
	right: 30px;
	font-size: 30px;
	font-weight: bold;
  /* Removes default (link) underline */
	text-decoration: none;
	color: #333;
}

/* Changes color when hovering over "x" button on modal */
.close:hover {
	color: #1db9f2;
}

.modal-content .congrats-message,
.info-message {
	max-height: 30%;
	overflow: auto;
	text-align: center;
}

.congrats-message {
  margin-top: 0.9em;
}

/* Displays stars on the same line, removes bullet points */
.star-rating li {
	display: inline-block;
  list-style: none;
}

/* Affects button inside modal that resets game on click */
.play-again {
  cursor: pointer;
	background-color: #1db9f2;
  /* Removes default border that looks like shadow */
  border: none;
	padding: 0.7rem 1rem;
	font-size: 1.1rem;
  /* Button elements are inline-block by default */
	display: block;
	margin: 0 auto;
	width: 40%;
	color: #fff;
	border-radius: 5px;
}

/* Animations */

/* @keyframes is a rule (built into CSS) that specifies animation code */
@keyframes flipInY {
	from {
		transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
		animation-timing-function: ease-in;
		opacity: 0;
	}

	40% {
		transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
		animation-timing-function: ease-in;
	}

	60% {
		transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
		opacity: 1;
	}

	80% {
		transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
	}

	to {
		transform: perspective(400px);
	}
}

@keyframes rubberBand {
	from {
		transform: scale3d(1, 1, 1);
	}

	30% {
		transform: scale3d(1.25, 0.75, 1);
	}

	40% {
		transform: scale3d(0.75, 1.25, 1);
	}

	50% {
		transform: scale3d(1.15, 0.85, 1);
	}

	65% {
		transform: scale3d(.95, 1.05, 1);
	}

	75% {
		transform: scale3d(1.05, .95, 1);
	}

	to {
		transform: scale3d(1, 1, 1);
	}
}

@keyframes pulse {
	from {
		transform: scale3d(1, 1, 1);
	}

	50% {
		transform: scale3d(1.2, 1.2, 1.2);
	}

	to {
		transform: scale3d(1, 1, 1);
	}
}

/* MEDIA QUERIES */

/* Extra small devices (portrait phones) and small devices (landscape phones) */
@media (min-width: 320px) {
  /* Enables scrolling on mobile */
  body {
    overflow: visible;
  }

  h2 {
    /* Increase h2 top margin, add bottom margin (compared to amount set above) (browser default is 0.83em) */
    margin: 0.5em 0 0.3em 0;
  }

  /* Set to same width as card-deck to allow items to be aligned to the left/right relative to it */
  .score-panel {
    width: 93%;
  }

	.card-deck {
		width: 93%;
	}

	.card-deck .card {
		height: 70px;
		width: 70px;
    /* Adds a little space between cards to prevent them from touching sides */
    margin: 4px;
	}
}

/* For tablets and larger screens */

/* TODO: separate styling for medium and large screens? How does it compare to default, and let something use default? */
@media (min-width: 768px) {
	.container {
		font-size: 18px;
	}

  /* Set to same width as card-deck to allow items to be aligned to the left/right relative to it */
  .score-panel {
    width: 550px;
  }

	.card-deck {
		width: 550px;
		height: 530px;
	}

	.card-deck .card {
		height: 110px;
		width: 110px;
	}

	.modal-content {
		width: 45%;
	}
}
